<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/MsBuild/2003">
    <PropertyGroup>
        <Configuration Condition="'$(Configuration)' == ''">Debug</Configuration>

        <ThemeName>gitweb-toucanize</ThemeName>        
        
        <!-- Origin folders -->
        <ThemeRoot>$(MSBuildProjectDirectory)\..</ThemeRoot>
        <ThemeSrcRoot>$(ThemeRoot)\src</ThemeSrcRoot>
        <ThemeStaticFilesSrcRoot>$(ThemeRoot)\src\static\toucanize</ThemeStaticFilesSrcRoot>
        <ConfigFilesSrcRoot>$(ThemeRoot)\config</ConfigFilesSrcRoot>
        
        <!-- Output folders-->
        <DropDirectory>$(ThemeRoot)\bin</DropDirectory>
        <ConfigDropDirectory>$(DropDirectory)\config</ConfigDropDirectory>
        <StaticFilesDropDirectory>$(DropDirectory)\static\toucanize</StaticFilesDropDirectory>
        
        <!-- CSS files input/output file names-->
        <CssOutputThemeFileName>gitweb-toucanize.min.css</CssOutputThemeFileName>
        <CssOutputFile Condition="'$(CssOutputFile)'==''">$(StaticFilesDropDirectory)\$(CssOutputThemeFileName)</CssOutputFile>
        
        <!-- Tools -->
        <ZipExe>$(ThemeRoot)\tools\7za920\7za.exe</ZipExe>
        <YuiCompressorDll>$(ThemeRoot)\tools\yahoo.yui.compressor\Yahoo.Yui.Compressor.dll</YuiCompressorDll>
    </PropertyGroup>

    <!-- Version information -->
    <PropertyGroup>
        <MajorVersion>0</MajorVersion>
        <MinorVersion>1</MinorVersion>
        <!-- Ensure that we come up with a new version every 65535 years -->
        <VersionStartYear>2011</VersionStartYear>

        <!-- Build number is of the format (CurrentYear - VersionStartYear + 1)(2 digit month)(2 digit day) -->
        <Build>$([MSBuild]::Add(1, $([MSBuild]::Subtract($([System.DateTime]::Now.Year), $(VersionStartYear)))))$([System.DateTime]::Now.ToString("MMdd"))</Build>
        <Revision>0</Revision><!--<Revision>$(BUILD_NUMBER)</Revision>-->
        <Version>$(MajorVersion).$(MinorVersion).$(Build).$(Revision)</Version>
    </PropertyGroup>
    
    <UsingTask
        TaskName="CompressorTask"
        AssemblyFile="$(YuiCompressorDll)" />

    <!-- Main Target -->
    <Target Name="Build" DependsOnTargets="CreateDropDirectories; CopyImagesToDropDirectory; CopyLicenseToDropDirectory; CopyConfigFileToDropDirectory; CompressDebug; CompressRelease">
    </Target>
    
    <!-- Child Targets-->
    <Target Name="CreateDropDirectories">
        <Message Text="Making the output directories for the compiled output at '$(DropDirectory)'." />
        <RemoveDir Directories="$(DropDirectory)" Condition="Exists('$(DropDirectory)')" ContinueOnError="True" />
        <MakeDir Directories="$(DropDirectory)" Condition="!Exists('$(DropDirectory)')" />
        <MakeDir Directories="$(StaticFilesDropDirectory)" Condition="!Exists('$(StaticFilesDropDirectory)')" />
    </Target>
    
    <Target Name="CopyImagesToDropDirectory">
        <ItemGroup>
            <ImagesOutputItems Include="$(ThemeStaticFilesSrcRoot)\*.png" />
        </ItemGroup>
        <Message Text="Copying the images to $(StaticFilesDropDirectory)" />
        <Copy ContinueOnError="false" SourceFiles="@(ImagesOutputItems)" DestinationFolder="$(StaticFilesDropDirectory)" />
    </Target>
    
    <Target Name="CopyLicenseToDropDirectory">
        <ItemGroup>
            <LicenseOutputItem Include="$(ThemeRoot)\license.txt" />
        </ItemGroup>
        <Message Text="Copying the license file to $(DropDirectory)" />
        <Copy ContinueOnError="false" SourceFiles="@(LicenseOutputItem)" DestinationFolder="$(DropDirectory)" />
    </Target>
    
    <Target Name="CopyConfigFileToDropDirectory">
        <ItemGroup>
            <ConfigOutputItem Include="$(ConfigFilesSrcRoot)\gitweb.conf.example" />
        </ItemGroup>
        <Message Text="Copying the config file to $(ConfigDropDirectory)" />
        <Copy ContinueOnError="false" SourceFiles="@(ConfigOutputItem)" DestinationFolder="$(ConfigDropDirectory)" />
    </Target>
    
    <!-- Debug: no compressing, just copy the files -->
    <Target Name="CompressDebug" Condition="'$(Configuration)' == 'Debug'">
        <!-- Just copy the CSS files -->
        <ItemGroup>
            <ImagesOutputItems Include="$(ThemeStaticFilesSrcRoot)\*.css" />
        </ItemGroup>
        <Message Text="Copying the CSS files to $(StaticFilesDropDirectory)" />
        <Copy ContinueOnError="false" SourceFiles="@(ImagesOutputItems)" DestinationFolder="$(StaticFilesDropDirectory)" />        
    </Target>

    <!-- Release: compress and copy the files -->
    <Target Name="CompressRelease" Condition="'$(Configuration)' == 'Release'">
        <!-- Compress the CSS files -->        
        <ItemGroup>
            <CssFiles Include="$(ThemeStaticFilesSrcRoot)\reset.css"/>
            <CssFiles Include="$(ThemeStaticFilesSrcRoot)\gitweb-toucanize.css"/>
        </ItemGroup>
        
        <CompressorTask
            CssFiles="@(CssFiles)"
            DeleteCssFiles="false"
            CssOutputFile="$(CssOutputFile)"
            CssCompressionType="YuiStockCompression"
            JavaScriptFiles=""
            ObfuscateJavaScript="True"
            PreserveAllSemicolons="False"
            DisableOptimizations="Nope"
            EncodingType="Default"
            DeleteJavaScriptFiles="false"
            LineBreakPosition="-1"
            JavaScriptOutputFile=""
            LoggingType="ALittleBit"
            ThreadCulture="en-au"
            IsEvalIgnored="false"
        />
        
        <!-- Add the files to a .zip -->
        <Exec Command="&quot;$(ZipExe)&quot; a ..\bin\$(ThemeName)-$(Version).zip" WorkingDirectory="$(DropDirectory)" />
    </Target>
</Project>